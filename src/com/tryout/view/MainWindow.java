package com.tryout.view;

import javax.swing.*;
import java.awt.*;

/**
 * Created by patrickackerman on 1/7/17.
 */
public class MainWindow {
    private JTree tree1;
    private JTable table1;
    private JTabbedPane tabbedPane1;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.setAlignmentX(1.0f);
        panel1.setAutoscrolls(false);
        panel1.setFocusTraversalPolicyProvider(false);
        panel1.setMinimumSize(new Dimension(200, 200));
        panel1.setOpaque(true);
        panel1.setPreferredSize(new Dimension(400, 404));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tree1 = new JTree();
        tree1.setMaximumSize(new Dimension(100, 60));
        tree1.setOpaque(false);
        tree1.setPreferredSize(new Dimension(200, 76));
        tree1.setRootVisible(false);
        tree1.setRowHeight(20);
        tree1.setScrollsOnExpand(true);
        scrollPane1.setViewportView(tree1);
        tabbedPane1 = new JTabbedPane();
        panel1.add(tabbedPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        final JScrollPane scrollPane2 = new JScrollPane();
        scrollPane2.setAutoscrolls(false);
        scrollPane2.setBackground(new Color(-15715261));
        scrollPane2.setInheritsPopupMenu(false);
        scrollPane2.setOpaque(false);
        tabbedPane1.addTab("Untitled", scrollPane2);
        table1 = new JTable();
        table1.setAutoCreateColumnsFromModel(false);
        table1.setBackground(new Color(-14795447));
        table1.setCellSelectionEnabled(true);
        table1.setColumnSelectionAllowed(true);
        table1.setFillsViewportHeight(true);
        table1.setFocusCycleRoot(false);
        table1.setFocusTraversalPolicyProvider(false);
        table1.setFont(new Font("Monospaced", table1.getFont().getStyle(), table1.getFont().getSize()));
        table1.setForeground(new Color(-4736837));
        table1.setGridColor(new Color(-13473154));
        table1.setInheritsPopupMenu(false);
        table1.setSelectionBackground(new Color(-12150087));
        scrollPane2.setViewportView(table1);
    }
}
